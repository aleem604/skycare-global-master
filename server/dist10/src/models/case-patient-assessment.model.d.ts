import { Entity } from '@loopback/repository';
export declare class CasePatientAssessment extends Entity {
    patientAssessmentID: string;
    caseID: string;
    airwayUsingO2?: boolean;
    airwayPatientO2LPM?: number;
    airwayUsingBVM?: boolean;
    airwayUsingETT?: boolean;
    airwayUsingETTSize?: number;
    airwayUsingETTRate?: string;
    airwayUsingOPANPA?: boolean;
    airwayUsingTrach?: boolean;
    airwayUsingTrachSize?: number;
    airwayNotes?: string;
    respBreathing?: string[];
    respTracheaMidline?: boolean;
    respCough?: boolean;
    respCoughProductive?: string;
    respChestWallExpansion?: string;
    respChestTrauma?: boolean;
    respBreathSounds?: string;
    respBreathDiminishedRight?: boolean;
    respBreathDiminishedLeft?: boolean;
    respMonitors?: string;
    respSupplimentaryO2Device?: string;
    respEquipLPM?: number;
    respEquipPercent?: number;
    cardiacRate?: number;
    cardiacRhythm?: string;
    cardiacSounds?: string;
    cardiacJvd?: string;
    cardiacPeripheralEdemaLocation?: string;
    cardiacPeripheralEdemaScore?: number;
    cardiacExternalPacing?: boolean;
    cardiacExternalPacingMA?: number;
    cardiacExternalPacingRate?: number;
    cardiacEcgFindings?: string;
    cardiacNotes?: string;
    cardiacEquipment?: string[];
    abdomenCondition?: string[];
    abdomenTenderness?: string[];
    abdomenBowelSounds?: string;
    abdomenFeedTube?: string;
    abdomenFeedTubeSize?: string;
    abdomenFeedTubeState?: string;
    abdomenNotes?: string;
    pelvisStable?: boolean;
    pelvisFoley?: boolean;
    pelvisFoleySize?: number;
    pelvisAppearanceOfUrine?: string;
    pelvisNotes?: string;
    painDenies?: boolean;
    painLocation?: string;
    painSensation?: string[];
    painScale?: number;
    backTrauma?: string[];
    backNotes?: string;
    extremitiesTrauma?: string[];
    extremitiesPulsesRUE?: number;
    extremitiesPulsesLUE?: number;
    extremitiesPulsesRLE?: number;
    extremitiesPulsesLLE?: number;
    demeanorSpeech?: string;
    demeanorSkin?: string[];
    demeanorBehavior?: string;
    neuroEyes?: string;
    neuroVerbal?: string;
    neuroMotor?: string;
    neuroGcsScore?: number;
    neuroHeentTrauma?: boolean;
    neuroPupilsPERRLA?: boolean;
    neuroSizeLeft?: number;
    neuroSizeRight?: number;
    neuroReactionLeft?: number;
    neuroReactionRight?: number;
    neuroNotes?: string;
    diagramAnnotations?: string;
    diagramNotes?: string;
    overallSignature?: string;
    constructor(data?: Partial<CasePatientAssessment>);
}
